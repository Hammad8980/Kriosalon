@page "/shopservices/{shopid}"
@using System.ComponentModel
@using AntDesign.TableModels
@using AntDesign.Core.Extensions
@inject NavigationManager nm;
@using Entities;
@using ShopAdmin.Data;
@inject IServices se;

<button @onclick="()=>NaviagteToServices(shopid)" class="btn btn-primary">Add Services</button>

<Table TItem="EntServices" DataSource="@data">

    <GenerateColumns Range="0.." Definitions=definitions />

    <ActionColumn Title="Action">
        <Space Size=@("middle")>
            <SpaceItem>
                    <button style="margin:3px" @onclick="()=>Delete(527058)" class="btn btn-danger">Delete</button>
                
                </SpaceItem>
            <SpaceItem>
                    <button style="margin:3px" @onclick="()=>UpdateServices(121122)" class="btn btn-primary">Update</button>
                
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>

@code {
    private List<EntServices> listservices { get; set; } = new List<EntServices>();
    EntServices[] data = new EntServices[] { };
    private int shopid;

    [Parameter]
    public string Shopid
    {
        get => shopid.ToString();
        set
        {
            if(int.TryParse(value,out int parsed))
            {
                shopid = parsed;
            }
        }
    }


    protected override async Task OnInitializedAsync()
    {
        listservices = await se.GetServices(shopid);
        data = listservices.ToArray();
    }

    private async Task Delete(int id)
    {
        await se.DeleteServices(id);
        listservices = await se.GetServices(shopid);
    }

    private async Task NaviagteToServices(int shopid)
    {
        nm.NavigateTo($"/addservices/{shopid}");
    }

    [Parameter] public static EntServices UpdateBO { get; set; }

    private async Task UpdateServices(int id)
    {
        UpdateBO = listservices.Find(x => x.serviceid == id);

        nm.NavigateTo($"/addservices/{shopid}/update");
    }

    void definitions(string propertyName, object column)
    {
        if (propertyName == "Tags")
        {
            var tagCol = ((Column<string[]>)column);

            tagCol.CellRender = cellData =>
    @<span>
        @foreach (var tag in cellData.FieldValue)
            {
                var color = tag.Length > 5 ? "geekblue" : "green";
                if (tag == "loser")
                {
                    color = "volcano";
                }
                <Tag Color="@color">@tag</Tag>
            }
        </span>
    ;

            return;
        }
    }
}
