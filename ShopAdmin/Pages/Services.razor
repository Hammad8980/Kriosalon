@page "/shopservices/{shopid}"

@inject NavigationManager nm;
@using Entities;
@using ShopAdmin.Data;
@inject IServices se;

<button @onclick="()=>NaviagteToServices(shopid)" class="btn btn-primary">Add Services</button>

<table class="table table-striped">
    <thead>
        <tr>
            <th>ServiceId</th>
            <th>Shop id</th>
            <th>Service Name</th>
            <th>Price</th>
            <th>Is active</th>
            <th>Action</th>

        </tr>
    </thead>
    @foreach (var item in listservices)
    {
        <tr>
            <td>@item.serviceid</td>
            <td>@item.shopid</td>
            <td>@item.servicename</td>
            <td>@item.price</td>
            <td>@item.isactive</td>
            
            <td>
                <a>
                    <button style="margin:3px" @onclick="()=>UpdateServices(item.serviceid)" class="btn btn-primary">Update</button>
                </a>
            </td>
            <td>
                <a>
                    <button style="margin:3px" @onclick="()=>Delete(item.serviceid)" class="btn btn-danger">Delete</button>
                </a>
            </td>
        </tr>
    }
</table>


@code {
    private List<EntServices> listservices { get; set; } = new List<EntServices>();
    private int shopid;

    [Parameter]
    public string Shopid
    {
        get => shopid.ToString();
        set
        {
            if(int.TryParse(value,out int parsed))
            {
                shopid = parsed;
            }
        }
    }


    protected override async Task OnInitializedAsync()
    {
        listservices = await se.GetServices(shopid);
    }

    private async Task Delete(int id)
    {
        await se.DeleteServices(id);
        listservices = await se.GetServices(shopid);
    }

    private async Task NaviagteToServices(int shopid)
    {
        nm.NavigateTo($"/addservices/{shopid}");
    }

    [Parameter] public static EntServices UpdateBO { get; set; }

    private async Task UpdateServices(int id)
    {
        UpdateBO = listservices.Find(x => x.serviceid == id);

        nm.NavigateTo($"/addservices/{shopid}/update");
    }
}
