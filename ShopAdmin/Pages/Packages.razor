@page "/shoppackages/{shopid}"
@using System.ComponentModel
@using AntDesign.TableModels
@using AntDesign.Core.Extensions
@using Entities;
@using ShopAdmin.Data;
@inject IPackages ob;
@inject NavigationManager nm;

<button @onclick="()=>NaviagteToAddPackages(shopid)" class="btn btn-primary">Add Packages</button>

<Table TItem="EntPackages" DataSource="@data">

    <GenerateColumns Range="0.." Definitions=definitions />

    <ActionColumn Title="Action">
        <Space Size=@("middle")>
            <SpaceItem>
                <button @onclick="()=>Delete( 171473)" class="btn btn-danger">Delete</button>
            </SpaceItem>
            <SpaceItem>
                    <button @onclick="()=>UpdatePackage(287518)" class="btn btn-primary">Update</button>
            
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>





@code {
    private List<EntPackages> listpackages { get; set; } = new List<EntPackages>();
    EntPackages[] data = new EntPackages[] { };
    private int shopid;

    [Parameter]
    public string Shopid
    {
        get => shopid.ToString();
        set
        {
            if(int.TryParse(value,out int parsed))
            {
                shopid = parsed;
            }
        }
    }
    protected override async Task OnInitializedAsync()
    {
        listpackages = await ob.GetPackages(shopid);
        data = listpackages.ToArray();
    }

    private async Task Delete(int id)
    {
        await ob.DeletePackage(id);
        listpackages = await ob.GetPackages(shopid);
    }
    private async Task NaviagteToAddPackages(int shopid)
    {
        nm.NavigateTo($"/addpackage/{shopid}");
    }

    [Parameter] public static EntPackages UpdateBO { get; set; }
    private async Task UpdatePackage(int id)
    {
        UpdateBO = listpackages.Find(x => x.packageid == id);

        nm.NavigateTo($"/addpackage/{shopid}/update");
    }

    void definitions(string propertyName, object column)
    {
        if (propertyName == "Tags")
        {
            var tagCol = ((Column<string[]>)column);

            tagCol.CellRender = cellData =>
    @<span>
        @foreach (var tag in cellData.FieldValue)
            {
                var color = tag.Length > 5 ? "geekblue" : "green";
                if (tag == "loser")
                {
                    color = "volcano";
                }
                <Tag Color="@color">@tag</Tag>
            }
        </span>
    ;

            return;
        }
    }
}
