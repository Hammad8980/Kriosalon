@page "/shopemployee/{shopid}"

@using Entities;
@using ShopAdmin.Data;
@inject NavigationManager nm;
@inject IEmployee em;

<button @onclick="()=>NavigateToAddEmployee(shopid)" class="btn btn-primary">Add Employee</button>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Shop id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Phone</th>
            <th>DOB</th>
            <th>CNIC</th>
            <th>Permanent Adress</th>
            <th>Temporary Adress</th>
            <th>Employee Type</th>
            <th>Joining Date</th>
            <th>Ending Date</th>
            <th>Active</th>
            <th>Action</th>

        </tr>
    </thead>
    
    @foreach (var item in listemployee)
        {
            <tr>
                <td>@item.empid</td>
                <td>@item.shopid</td>
                <td>@item.firstname</td>
                <td>@item.lastname</td>
                <td>@item.phone</td>
                <td>@item.dob</td>
                <td>@item.cnic</td>
                <td>@item.padress</td>
                <td>@item.tadress</td>
                <td>@item.emptype</td>
                <td>@item.joiningdate</td>
                <td>@item.enddate</td>
                <td>@item.isactive</td>
                <td>
                <a><button style="margin:3px" @onclick="()=>DeleteEmployee(item.empid)" class="btn btn-danger">Delete</button>
                </a>
            </td>
            <td>
                <a>
                    <button style="margin:3px" @onclick="()=>UpdateEmployee(item.empid)" class="btn btn-primary">Update</button>
                </a>
            </td>
        </tr>
        }

    

</table>



@code {
    private List<EntEmployee> listemployee { get; set; } = new List<EntEmployee>();
    private int shopid;

    protected override async Task OnInitializedAsync()
    {
        listemployee = await em.GetShopEmployee(shopid);
    }

    [Parameter]
    public string Shopid
    {
        get=>shopid.ToString();
        set
        {
            if (int.TryParse(value, out int tryparsed))
            {
                shopid = tryparsed;    
            }
        }
    }

    private async Task NavigateToAddEmployee(int shopid)
    {
        nm.NavigateTo($"/addemployeeshop/{ shopid}");
    }

    private async Task DeleteEmployee(int id)
    {
        await em.DeleteEmployee(id);
        listemployee = await em.GetShopEmployee(shopid);
    }

    [Parameter] public static EntEmployee UpdateBO { get; set; }
    private async Task UpdateEmployee(int id)
    {
        UpdateBO = listemployee.Find(x => x.empid == id);

        nm.NavigateTo($"/addemployeeshop/{shopid}/update");
    }
}
