@page "/allbusinessowner"
@using Entities;
@using ShopAdmin.Data;

@inject IAllBusinessOwner ob;
@inject NavigationManager nm;

<h1>All Business Profiles </h1>

<a href="addbusinessowner" class="btn btn-primary">Add New</a>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>CNIC</th>
            <th>Creation Date</th>
            <th>Phone</th>
            <th>Active</th>
            <th>Update</th>
        </tr>
    </thead>
    @foreach (var item in ListBusinesses)
    {
        <tr>
            <td>@item.boid</td>
            <td>@item.firstname</td>
            <td>@item.lastname</td>
            <td>@item.emailadress</td>
            <td>@item.cnic</td>
            <td>@item.creationdatetime</td>
            <td>@item.phone</td>
            <td>@item.isactive</td>
            <button style="margin:3px" @onclick="() => NavigateToOwnerShops(item.boid)" class="btn btn-primary">Shops</button>
            <td>
                <a><button style="margin:3px" @onclick="() => UpdatebusinessOwner(item.boid)" class="btn btn-primary">Update</button></a>
                </td>
            
        </tr>
    }
</table>


@code {
    private List<EntBusinessOwner> ListBusinesses { get; set; } = new List<EntBusinessOwner>();

    protected override async Task OnInitializedAsync()
    {
        ListBusinesses = await ob.GetBusinessOwner();
    }
    private async Task NavigateToOwnerShops(int boid)
    {
        nm.NavigateTo($"/ownershops/{boid}");
    }

    [Parameter] public static EntBusinessOwner UpdateBO { get; set; }
    private async Task UpdatebusinessOwner(int id)
    {
        UpdateBO = ListBusinesses.Find(x => x.boid == id);

        nm.NavigateTo("addbusinessowner/update");
    }
}
