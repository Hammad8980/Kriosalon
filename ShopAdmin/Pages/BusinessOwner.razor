@page "/allbusinessowner"
@using System.ComponentModel
@using AntDesign.TableModels
@using AntDesign.Core.Extensions
@using Entities;
@using ShopAdmin.Data;

@inject IAllBusinessOwner ob;
@inject NavigationManager nm;

<h1>All Business Profiles </h1>

<a href="addbusinessowner" class="btn btn-primary">Add New</a>


<Table TItem="EntBusinessOwner" DataSource="@data">
    <GenerateColumns Range="1.." Definitions=definitions />
    <ActionColumn Title="Action">
        <Space Size=@("middle")>
           
            <SpaceItem>
                <a>Delete</a>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>
@code {
    private List<EntBusinessOwner> ListBusinesses { get; set; } = new List<EntBusinessOwner>();
    EntBusinessOwner[] data = new EntBusinessOwner[] { };
    protected override async Task OnInitializedAsync()
    {
        ListBusinesses = await ob.GetBusinessOwner(637889);
        data = ListBusinesses.ToArray();

    }
    private async Task NavigateToOwnerShops(int boid)
    {
        nm.NavigateTo($"/ownershops/{boid}");
    }

    [Parameter] public static EntBusinessOwner UpdateBO { get; set; }
    private async Task UpdatebusinessOwner(int id)
    {
        UpdateBO = ListBusinesses.Find(x => x.boid == id);

        nm.NavigateTo("addbusinessowner/update");
    }
    void definitions(string propertyName, object column)
    {
        if (propertyName == "Tags")
        {
            var tagCol = ((Column<string[]>)column);

            tagCol.CellRender = cellData =>
    @<span>
        @foreach (var tag in cellData.FieldValue)
        {
            var color = tag.Length > 5 ? "geekblue" : "green";
            if (tag == "loser")
            {
                color = "volcano";
            }
            <Tag Color="@color">@tag</Tag>
        }
    </span>;

            return;
        }

        // You can use the `SetValue` extension method to set parameters for columns.
        column.SetValue("Sortable", true);
        column.SetValue("Filterable", true);
    }
} 
